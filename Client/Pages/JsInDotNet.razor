@page "/jsindotnet"

<Title value="JS In DotNet" />

<h2>Call JavaScript From DotNet</h2>
<hr />
<div class="form-group row">
    <div class="col-md-6">
        <h5>Call JS functions from Blazor:</h5>
    </div>
    <div class="col-md-4">
        <button type="button" class="btn btn-sm btn-success" @onclick="PrintMessage">
            Send Message
        </button>
    </div>
</div>
<div class="form-group row">
    <div class="col-md-6">
        <div class="h5 alert alert-light border" role="alert">
            Message from .NET to JS:
            <span class="form-text text-break text-success font-weight-bold" id="message"></span>
        </div>
    </div>
</div>

<br />
<br />

<div class="form-group row">
    <div class="col-md-6">
        <h5>Call JS functions with return value from .NET:</h5>
    </div>
    <div class="col-md-4">
        <button type="button" class="btn btn-sm btn-success" @onclick="PrintReturnValue">
            Get Value
        </button>
    </div>
</div>
<div class="form-group row">
    <div class="col-md-6">
        <textarea class="form-control form-control-sm mb-3" placeholder="Enter your text here..." id="text"></textarea>
    </div>
    <div class="col-md-6">
        <div class="h5 alert alert-light border" role="alert">
            Return value from JS to .NET:
            <span class="form-text text-break text-success font-weight-bold">
                @text
            </span>
        </div>
    </div>
</div>

<br />
<br />

<div class="form-group row">
    <div class="col-md-6">
        <h5>Call JS functions with IJSObjectReference:</h5>
    </div>
</div>
<div class="form-group row">
    <div class="col-md-6">
        <div class="carousel slide carousel-fade" data-ride="carousel" id="@carouselId" @ref="carouselRef">
            <!-- images -->
            <div class="carousel-inner" role="listbox">
                @{
                    var i = 0;
                    do {
                        <div class="carousel-item @(i == 0 ? "active" : "")">
                            <div class="item-responsive">
                                <div class="content bg-light border rounded" style="background-image: url(@(ImageService.Images.Any() ? ImageService.Images[i].ToBase64 : ""));"></div>
                            </div>
                            <!-- captions -->
                            <div class="carousel-caption">
                                <text>Slide @(i + 1)</text>
                            </div>
                        </div>
                    } while (++i < ImageService.Images.Count);
                }
            </div>
            <!-- controls -->
            @if (ImageService.Images.Any()) {
                <a class="carousel-control-prev" data-target="#@carouselId" data-slide="prev" role="button">
                    <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                    <span class="sr-only">Previous</span>
                </a>
                <a class="carousel-control-next" data-target="#@carouselId" data-slide="next" role="button">
                    <span class="carousel-control-next-icon" aria-hidden="true"></span>
                    <span class="sr-only">Next</span>
                </a>
            }
            <!-- indicators -->
            <ol class="carousel-indicators">
                @for (i = 0; i < ImageService.Images.Count; ++i) {
                    <li class="@(i == 0 ? "active" : "")" data-target="#@carouselId" data-slide-to="@i"></li>
                }
            </ol>
        </div>
    </div>
</div>
